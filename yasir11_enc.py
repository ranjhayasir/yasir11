# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Tue Nov  1 13:16:45 2022
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'=='))